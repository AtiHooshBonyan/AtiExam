@using AtiExamSite.Models.DomainModels.Exam
@model IEnumerable<Question>

@{
    ViewData["Title"] = "Questions";
}

<div class="container">
    <div class="d-flex flex-wrap justify-content-between align-items-center mb-4 gap-2">
        <div class="d-flex align-items-center gap-3 flex-wrap">
            <h1 class="mb-0">Questions</h1>

            <div class="input-group" style="min-width: 250px;">
                <span class="input-group-text" id="search-label"><i class="fas fa-search"></i></span>
                <input type="text" id="searchInput" class="form-control" placeholder="Search title..." aria-label="Search title" aria-describedby="search-label" />
            </div>

            <select id="difficultyFilter" class="form-select" style="width:150px;">
                <option value="">All Difficulty</option>
                <option value="easy">Easy</option>
                <option value="medium">Medium</option>
                <option value="hard">Hard</option>
            </select>
        </div>

        <div class="btn-group">
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus"></i> Create New
            </a>
            <a asp-action="CreateBulk" class="btn btn-secondary">
                <i class="fas fa-plus-circle"></i> Create Bulk
            </a>
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-body p-3">
            <div class="table-responsive">
                <table class="table table-hover align-middle" id="questionsTable">
                    <thead class="table-light">
                        <tr>
                            <th>Title</th>
                            <th>Difficulty</th>
                            <th class="text-center">Options</th>
                            <th class="text-nowrap">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Any())
                        {
                            @foreach (var item in Model)
                            {
                                <tr data-title="@item.Title.ToLower()" data-difficulty="@item.DifficultyLevel.ToLower()">
                                    <td class="w-50">@item.Title</td>
                                    <td>
                                        <span class="badge @GetDifficultyBadgeClass(item.DifficultyLevel)">
                                            @item.DifficultyLevel
                                        </span>
                                    </td>
                                    <td class="text-center">@((item.QuestionOptions?.Count ?? 0))</td>
                                    <td class="text-nowrap">
                                        <div class="btn-group" role="group" aria-label="Actions for question @item.Title">
                                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info" title="Details">
                                                <i class="fas fa-eye"></i><span class="visually-hidden">Details</span>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning" title="Edit">
                                                <i class="fas fa-edit"></i><span class="visually-hidden">Edit</span>
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger" title="Delete" onclick="return confirm('Are you sure you want to delete this question?');">
                                                <i class="fas fa-trash"></i><span class="visually-hidden">Delete</span>
                                            </a>
                                            <a asp-action="AddOptions" asp-route-questionId="@item.Id" class="btn btn-sm btn-success" title="Add Options">
                                                <i class="fas fa-plus"></i><span class="visually-hidden">Add Options</span>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="5" class="text-center text-muted py-3">
                                    <i class="fas fa-info-circle me-1"></i> No questions available.
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (function () {
            const searchInput = $('#searchInput');
            const difficultyFilter = $('#difficultyFilter');
            const rows = $('#questionsTable tbody tr');

            function applyFilters() {
                const text = (searchInput.val() || "").toLowerCase();
                const diff = (difficultyFilter.val() || "").toLowerCase();

                rows.each(function () {
                    const $tr = $(this);
                    const title = ($tr.data('title') || "").toLowerCase();
                    const difficulty = ($tr.data('difficulty') || "").toLowerCase();

                    const matchesText = title.includes(text);
                    const matchesDifficulty = !diff || difficulty === diff;

                    $tr.toggle(matchesText && matchesDifficulty);
                });
            }

            searchInput.on('input', applyFilters);
            difficultyFilter.on('change', applyFilters);
        })();
    </script>
}

@functions {
    public string GetDifficultyBadgeClass(string difficulty)
    {
        return difficulty switch
        {
            "Easy" => "bg-success",
            "Medium" => "bg-warning text-dark",
            "Hard" => "bg-danger",
            _ => "bg-secondary"
        };
    }
}

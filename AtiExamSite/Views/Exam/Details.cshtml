@model AtiExamSite.Models.DomainModels.Exam

@{
    ViewData["Title"] = Model.Title;
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>@Model.Title</h1>
        <span class="badge @(Model.IsActive ? "bg-success" : "bg-secondary")">
            @(Model.IsActive ? "Active" : "Inactive")
        </span>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <h4>Exam Details</h4>
        </div>
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-3">Description</dt>
                <dd class="col-sm-9">@Model.Description</dd>

                <dt class="col-sm-3">Time Limit</dt>
                <dd class="col-sm-9">@(Model.TimeLimitMinutes?.ToString() ?? "N/A") minutes</dd>

                <dt class="col-sm-3">Total Questions</dt>
                <dd class="col-sm-9">@Model.QuestionCount</dd>

                <dt class="col-sm-3">Required Questions</dt>
                <dd class="col-sm-9">@Model.RequiredQuestion</dd>

                <dt class="col-sm-3">Passing Score</dt>
                <dd class="col-sm-9">@Model.PassingScore</dd>
            </dl>
        </div>
    </div>

    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h4>Questions (@Model.ExamQuestions?.Count)</h4>
            <a asp-action="AddQuestions" asp-route-examId="@Model.Id" class="btn btn-sm btn-primary">Add Questions</a>
        </div>
        <div class="card-body">
            @if (Model.ExamQuestions?.Any() == true)
            {
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Question</th>
                                <th>Difficulty</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var examQuestion in Model.ExamQuestions)
                            {
                                <tr>
                                    <td>@examQuestion.Question?.Title</td>
                                    <td>
                                        <span class="badge @GetDifficultyBadgeClass(examQuestion.Question?.DifficultyLevel)">
                                            @examQuestion.Question?.DifficultyLevel
                                        </span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info">No questions added to this exam yet.</div>
            }
        </div>
    </div>

    <div class="mt-4">
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">Edit</a>
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</div>

@functions {
    public string GetDifficultyBadgeClass(string difficulty)
    {
        return difficulty switch
        {
            "Easy" => "bg-success",
            "Medium" => "bg-warning",
            "Hard" => "bg-danger",
            _ => "bg-secondary"
        };
    }
}